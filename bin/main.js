"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_server_1 = require("apollo-server");
require("graphql-import-node");
var schema_gql_1 = __importDefault(require("../gql/schema.gql"));
var todos = [{
        title: 'Build a todo graph',
        status: "IN_PROGRESS" /* IN_PROGRESS */,
    }, {
        title: 'Interact with that graph',
        status: "TODO" /* TODO */,
    }];
var TodoItem = {
    status: function (parent) { return todos[parent.idx].status; },
    title: function (parent) { return todos[parent.idx].title; },
};
var TodoOps = {
    setStatus: function (parent, _a) {
        var status = _a.status;
        var todoItem = todos[parent.idx];
        todoItem.status = status;
        return todoItem;
    }
};
var resolvers = {
    Query: {
        todos: function () { return todos; },
    },
    // TodoItem,
    Mutation: {
        addTodo: function (parent, _a) {
            var title = _a.title;
            var newTodo = {
                title: title,
                status: "TODO" /* TODO */,
            };
            todos.push(newTodo);
            return newTodo;
        },
        todo: function (parent, _a) {
            var idx = _a.idx;
            if (idx < 0 || idx >= todos.length)
                throw new TypeError('Index is out of bounds');
            return { idx: idx };
        }
    },
    TodoOps: TodoOps,
};
var server = new apollo_server_1.ApolloServer({
    typeDefs: schema_gql_1.default,
    resolvers: resolvers,
});
server.listen().then(function (_a) {
    var url = _a.url;
    return console.log(url);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsK0NBQTBFO0FBQzFFLCtCQUE2QjtBQUM3QixpRUFBeUM7QUFTekMsSUFBTSxLQUFLLEdBQWtCLENBQUM7UUFDMUIsS0FBSyxFQUFFLG9CQUFvQjtRQUMzQixNQUFNLGlDQUEyQjtLQUNwQyxFQUFFO1FBQ0MsS0FBSyxFQUFFLDBCQUEwQjtRQUNqQyxNQUFNLG1CQUFvQjtLQUM3QixDQUFDLENBQUM7QUFNSCxJQUFNLFFBQVEsR0FBMEQ7SUFDcEUsTUFBTSxFQUFFLFVBQUEsTUFBTSxJQUFJLE9BQUEsS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQXhCLENBQXdCO0lBQzFDLEtBQUssRUFBRSxVQUFBLE1BQU0sSUFBSSxPQUFBLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUF2QixDQUF1QjtDQUMzQyxDQUFDO0FBRUYsSUFBTSxPQUFPLEdBQXlEO0lBQ2xFLFNBQVMsRUFBRSxVQUFDLE1BQU0sRUFBRSxFQUFVO1lBQVIsTUFBTSxZQUFBO1FBQ3hCLElBQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbkMsUUFBUSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDekIsT0FBTyxRQUFRLENBQUM7SUFDcEIsQ0FBQztDQUNKLENBQUM7QUFFRixJQUFNLFNBQVMsR0FBNkI7SUFDeEMsS0FBSyxFQUFFO1FBQ0gsS0FBSyxFQUFFLGNBQU0sT0FBQSxLQUFLLEVBQUwsQ0FBSztLQUtyQjtJQUNELFlBQVk7SUFDWixRQUFRLEVBQUU7UUFDTixPQUFPLEVBQUUsVUFBQyxNQUFNLEVBQUUsRUFBUztnQkFBUCxLQUFLLFdBQUE7WUFDckIsSUFBTSxPQUFPLEdBQWdCO2dCQUN6QixLQUFLLE9BQUE7Z0JBQ0wsTUFBTSxtQkFBb0I7YUFDN0IsQ0FBQztZQUNGLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDcEIsT0FBTyxPQUFPLENBQUM7UUFDbkIsQ0FBQztRQUNELElBQUksRUFBRSxVQUFDLE1BQU0sRUFBRSxFQUFPO2dCQUFMLEdBQUcsU0FBQTtZQUNoQixJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNO2dCQUFFLE1BQU0sSUFBSSxTQUFTLENBQUMsd0JBQXdCLENBQUMsQ0FBQztZQUNsRixPQUFPLEVBQUUsR0FBRyxLQUFBLEVBQUUsQ0FBQztRQUNuQixDQUFDO0tBQ0o7SUFDRCxPQUFPLFNBQUE7Q0FDVixDQUFDO0FBRUYsSUFBTSxNQUFNLEdBQUcsSUFBSSw0QkFBWSxDQUFDO0lBQzVCLFFBQVEsc0JBQUE7SUFDUixTQUFTLFdBQUE7Q0FDWixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQUMsRUFBTztRQUFMLEdBQUcsU0FBQTtJQUFPLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7QUFBaEIsQ0FBZ0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBvbGxvU2VydmVyLCBJUmVzb2x2ZXJzLCBJUmVzb2x2ZXJPYmplY3QgfSBmcm9tICdhcG9sbG8tc2VydmVyJztcclxuaW1wb3J0ICdncmFwaHFsLWltcG9ydC1ub2RlJztcclxuaW1wb3J0IHR5cGVEZWZzIGZyb20gJy4uL2dxbC9zY2hlbWEuZ3FsJztcclxuaW1wb3J0IHtcclxuICAgIEdRTFJlc29sdmVyLFxyXG4gICAgR1FMVG9kb0l0ZW0sXHJcbiAgICBHUUxUb2RvU3RhdHVzLFxyXG4gICAgR1FMVG9kb0l0ZW1UeXBlUmVzb2x2ZXIsXHJcbiAgICBHUUxUb2RvT3BzVHlwZVJlc29sdmVyLFxyXG59IGZyb20gJy4vZ3JhcGhxbFR5cGVzJztcclxuXHJcbmNvbnN0IHRvZG9zOiBHUUxUb2RvSXRlbVtdID0gW3tcclxuICAgIHRpdGxlOiAnQnVpbGQgYSB0b2RvIGdyYXBoJyxcclxuICAgIHN0YXR1czogR1FMVG9kb1N0YXR1cy5JTl9QUk9HUkVTUyxcclxufSwge1xyXG4gICAgdGl0bGU6ICdJbnRlcmFjdCB3aXRoIHRoYXQgZ3JhcGgnLFxyXG4gICAgc3RhdHVzOiBHUUxUb2RvU3RhdHVzLlRPRE8sXHJcbn1dO1xyXG5cclxuaW50ZXJmYWNlIFRvZG9IYW5kbGUge1xyXG4gICAgaWR4OiBudW1iZXI7XHJcbn1cclxuXHJcbmNvbnN0IFRvZG9JdGVtOiBHUUxUb2RvSXRlbVR5cGVSZXNvbHZlcjxUb2RvSGFuZGxlPiAmIElSZXNvbHZlck9iamVjdCA9IHtcclxuICAgIHN0YXR1czogcGFyZW50ID0+IHRvZG9zW3BhcmVudC5pZHhdLnN0YXR1cyxcclxuICAgIHRpdGxlOiBwYXJlbnQgPT4gdG9kb3NbcGFyZW50LmlkeF0udGl0bGUsXHJcbn07XHJcblxyXG5jb25zdCBUb2RvT3BzOiBHUUxUb2RvT3BzVHlwZVJlc29sdmVyPFRvZG9IYW5kbGU+ICYgSVJlc29sdmVyT2JqZWN0ID0ge1xyXG4gICAgc2V0U3RhdHVzOiAocGFyZW50LCB7IHN0YXR1cyB9KSA9PiB7XHJcbiAgICAgICAgY29uc3QgdG9kb0l0ZW0gPSB0b2Rvc1twYXJlbnQuaWR4XTtcclxuICAgICAgICB0b2RvSXRlbS5zdGF0dXMgPSBzdGF0dXM7XHJcbiAgICAgICAgcmV0dXJuIHRvZG9JdGVtO1xyXG4gICAgfVxyXG59O1xyXG5cclxuY29uc3QgcmVzb2x2ZXJzOiBHUUxSZXNvbHZlciAmIElSZXNvbHZlcnMgPSB7XHJcbiAgICBRdWVyeToge1xyXG4gICAgICAgIHRvZG9zOiAoKSA9PiB0b2RvcyxcclxuICAgICAgICAvLyB0b2RvOiAocGFyZW50LCB7IGlkeCB9KSA9PiB7XHJcbiAgICAgICAgLy8gICAgIGlmIChpZHggPCAwIHx8IGlkeCA+PSB0b2Rvcy5sZW5ndGgpIHRocm93IG5ldyBUeXBlRXJyb3IoJ0luZGV4IGlzIG91dCBvZiBib3VuZHMnKTtcclxuICAgICAgICAvLyAgICAgcmV0dXJuIHsgaWR4IH07XHJcbiAgICAgICAgLy8gfSxcclxuICAgIH0sXHJcbiAgICAvLyBUb2RvSXRlbSxcclxuICAgIE11dGF0aW9uOiB7XHJcbiAgICAgICAgYWRkVG9kbzogKHBhcmVudCwgeyB0aXRsZSB9KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld1RvZG86IEdRTFRvZG9JdGVtID0ge1xyXG4gICAgICAgICAgICAgICAgdGl0bGUsXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IEdRTFRvZG9TdGF0dXMuVE9ETyxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdG9kb3MucHVzaChuZXdUb2RvKTtcclxuICAgICAgICAgICAgcmV0dXJuIG5ld1RvZG87XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0b2RvOiAocGFyZW50LCB7IGlkeCB9KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChpZHggPCAwIHx8IGlkeCA+PSB0b2Rvcy5sZW5ndGgpIHRocm93IG5ldyBUeXBlRXJyb3IoJ0luZGV4IGlzIG91dCBvZiBib3VuZHMnKTtcclxuICAgICAgICAgICAgcmV0dXJuIHsgaWR4IH07XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIFRvZG9PcHMsXHJcbn07XHJcblxyXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHtcclxuICAgIHR5cGVEZWZzLFxyXG4gICAgcmVzb2x2ZXJzLFxyXG59KTtcclxuXHJcbnNlcnZlci5saXN0ZW4oKS50aGVuKCh7IHVybCB9KSA9PiBjb25zb2xlLmxvZyh1cmwpKTsiXX0=